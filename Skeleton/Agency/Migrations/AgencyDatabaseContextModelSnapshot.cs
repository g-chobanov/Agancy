// <auto-generated />
using System;
using Agency.Models.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Agency.Models.Migrations
{
    [DbContext(typeof(AgencyDatabaseContext))]
    partial class AgencyDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Agency.Models.Classes.Journey", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Destination")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("Distance")
                        .HasColumnType("int");

                    b.Property<string>("StartLocation")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("VehicleId");

                    b.ToTable("Journeys");
                });

            modelBuilder.Entity("Agency.Models.Classes.Ticket", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AdministrativeCosts")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("JourneyID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("JourneyID");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Agency.Models.Models.Vehicles.Vehicle", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PassengerCapacity")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerKilometer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("Agency.Models.Vehicles.Airplane", b =>
                {
                    b.HasBaseType("Agency.Models.Models.Vehicles.Vehicle");

                    b.Property<bool>("HasFreeFood")
                        .HasColumnType("bit");

                    b.ToTable("Airplanes");
                });

            modelBuilder.Entity("Agency.Models.Vehicles.Bus", b =>
                {
                    b.HasBaseType("Agency.Models.Models.Vehicles.Vehicle");

                    b.ToTable("Buses");
                });

            modelBuilder.Entity("Agency.Models.Vehicles.CargoShip", b =>
                {
                    b.HasBaseType("Agency.Models.Models.Vehicles.Vehicle");

                    b.Property<int>("Storage")
                        .HasColumnType("int");

                    b.ToTable("CargoShips");
                });

            modelBuilder.Entity("Agency.Models.Vehicles.Train", b =>
                {
                    b.HasBaseType("Agency.Models.Models.Vehicles.Vehicle");

                    b.Property<int>("Carts")
                        .HasColumnType("int");

                    b.ToTable("Trains");
                });

            modelBuilder.Entity("Agency.Models.Vehicles.Truck", b =>
                {
                    b.HasBaseType("Agency.Models.Models.Vehicles.Vehicle");

                    b.Property<int>("Storage")
                        .HasColumnType("int");

                    b.ToTable("Trucks");
                });

            modelBuilder.Entity("Agency.Models.Classes.Journey", b =>
                {
                    b.HasOne("Agency.Models.Models.Vehicles.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Agency.Models.Classes.Ticket", b =>
                {
                    b.HasOne("Agency.Models.Classes.Journey", "Journey")
                        .WithMany()
                        .HasForeignKey("JourneyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Journey");
                });

            modelBuilder.Entity("Agency.Models.Vehicles.Airplane", b =>
                {
                    b.HasOne("Agency.Models.Models.Vehicles.Vehicle", null)
                        .WithOne()
                        .HasForeignKey("Agency.Models.Vehicles.Airplane", "ID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agency.Models.Vehicles.Bus", b =>
                {
                    b.HasOne("Agency.Models.Models.Vehicles.Vehicle", null)
                        .WithOne()
                        .HasForeignKey("Agency.Models.Vehicles.Bus", "ID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agency.Models.Vehicles.CargoShip", b =>
                {
                    b.HasOne("Agency.Models.Models.Vehicles.Vehicle", null)
                        .WithOne()
                        .HasForeignKey("Agency.Models.Vehicles.CargoShip", "ID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agency.Models.Vehicles.Train", b =>
                {
                    b.HasOne("Agency.Models.Models.Vehicles.Vehicle", null)
                        .WithOne()
                        .HasForeignKey("Agency.Models.Vehicles.Train", "ID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agency.Models.Vehicles.Truck", b =>
                {
                    b.HasOne("Agency.Models.Models.Vehicles.Vehicle", null)
                        .WithOne()
                        .HasForeignKey("Agency.Models.Vehicles.Truck", "ID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
